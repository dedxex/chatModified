{% extends 'master' %}
{% block content %}
<!--/////////////////-->
<!--//styles are here-->
<!--/////////////////-->

<style>
  * { margin: 0; padding: 0; box-sizing: border-box; }
  body { font: 13px Helvetica, Arial; }
  form { background: rgba(58, 143, 27, 0.01); padding: 3px; position: fixed; bottom: 0; width: 60%; }
  form input { border: 1; padding: 10px; width: 80%; margin-right: .5%; }
  form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
  #messages { list-style-type: none; margin: 0; padding: 0; }
  #messages li { padding: 5px 10px; }
  #messages li:nth-child(odd) { background: #eee; }
  #messagesj { list-style-type: none; margin: 0; padding: 0; }
  #messagesj li { padding: 5px 10px; }
  #messagesj li:nth-child(even) { background: #eee; }
</style>
<!--=======================================================-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.7/socket.io.min.js"></script>
<script>
  var socket = io('http://localhost:3000');
</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>

<!--//////////////////-->
<!--//javascript script files-->
<!--//////////////////-->
<script>
  var user_name="{{users.loggedUser}}";
  var users = "{{users}}"
  console.log("active users are",user_name)
</script>
  <script src="https://www.gstatic.com/firebasejs/3.6.1/firebase.js"></script>
  <script src="https://www.gstatic.com/firebasejs/3.6.1/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/3.6.1/firebase-auth.js"></script>
  <script src="https://www.gstatic.com/firebasejs/3.6.1/firebase-database.js"></script>
  <script src="https://www.gstatic.com/firebasejs/3.6.1/firebase-messaging.js"></script>
  <script>
    var config = {
        apiKey: "AIzaSyA6IVvmUJ9wb8YetHtN9E-I4KiGBgV3nC0",
        authDomain: "chat-aa539.firebaseapp.com",
        databaseURL: "https://chat-aa539.firebaseio.com",
        storageBucket: "chat-aa539.appspot.com",
        messagingSenderId: "104742087727"
    };
    firebase.initializeApp(config);
  </script>
  <script>
    //==================================================================
      // Retrieve Firebase Messaging object.

      const messaging = firebase.messaging();
      //requesting permission to recieve notificaiton
      messaging.requestPermission()
      .then(function() {
        console.log('Notification permission granted.');
        // TODO(developer): Retrieve an Instance ID token for use with FCM.
        // ...
      })
      .catch(function(err) {
        console.log('Unable to get permission to notify.', err);
      });

      //recieve the current registration token

        // Get Instance ID token. Initially this makes a network call, once retrieved
        // subsequent calls to getToken will return from cache.
        messaging.getToken()
        .then(function(currentToken) {
          if (currentToken) {
            sendTokenToServer(currentToken);
            updateUIForPushEnabled(currentToken);
          } else {
            // Show permission request.
            console.log('No Instance ID token available. Request permission to generate one.');
            // Show permission UI.
            updateUIForPushPermissionRequired();
            setTokenSentToServer(false);
          }
        })
        .catch(function(err) {
          console.log('An error occurred while retrieving token. ', err);
          //showToken('Error retrieving Instance ID token. ', err);
          //setTokenSentToServer(false);
        });
      //}
    //monitoring token refresh

    // Callback fired if Instance ID token is updated.
    messaging.onTokenRefresh(function() {
      messaging.getToken()
      .then(function(refreshedToken) {
        console.log('Token refreshed.');
        // Indicate that the new Instance ID token has not yet been sent to the
        // app server.
        setTokenSentToServer(false);
        // Send Instance ID token to app server.
        sendTokenToServer(refreshedToken);
        // ...
      })
      .catch(function(err) {
        console.log('Unable to retrieve refreshed token ', err);
        showToken('Unable to retrieve refreshed token ', err);
      });
    });
    //onmessage event
    messaging.onMessage(function(payload) {
      console.log("Message received. ", payload);
      // ...
    });
    //asking for messaging permission
    messaging.requestPermission()
    .then(function() {
      console.log('Notification permission granted.');
      // TODO(developer): Retrieve an Instance ID token for use with FCM.
      // ...
    })
    .catch(function(err) {
      console.log('Unable to get permission to notify.', err);
    });
  </script>
</script>
<!--================================================================-->
<script>
  $(document).ready(function(){

    var user_name="{{users.loggedUser}}";
    var users = "{{users}}"
    var activeUsers={};
    console.log("the logged user is",user_name);
    socket.emit('register',user_name);
    var data_server;
    let fromauser = " ";
    let tempAuser = {};
    var tempu = "";

    //============================================================================

    $('select').click(function() {
      var data_server = {};
      data_server.fromuser = user_name;
      fromauser = user_name;
      var selectedUser = $('select').val();
      data_server.touser = selectedUser;
      fromauser = selectedUser;
      console.log("user has been selected",selectedUser);
      $('h5').remove();
      $('#fromauser').append($('<h5>').text(fromauser));
      $('.hello').remove();
      socket.emit('getconversationlist',data_server);
    });
    //===================================================
    $('#active').on('click', 'h2', function() {
      var data_server = {};
      data_server.fromuser = user_name;
      //data_server.fromuser is the clien
      const temp = $('h2').text();
      console.log("h2 is clicked",temp);
      var selectedUser = $(this).text();
      tempu = selectedUser;
      console.log('this is the selected user',selectedUser);
      data_server.touser = selectedUser;
      fromauser = selectedUser;
      to_user=selectedUser;
      console.log("user has been selected",selectedUser);
      $('h5').remove();
      $('#fromauser').append($('<h5>').text(fromauser));
      $('.hello').remove();
      console.log("the value of data_server is",data_server);
      socket.emit('getconversationlist',data_server);
    });

    //===========================================================

    $('form').submit(function(){
      var to_user = tempu;
    if(!to_user){
      to_user = $('#to').val();
    }
      var test = "{{users}}";
      var msg = $('#m').val();
      data_server = {
        id: to_user,
        msg: msg,
        name: user_name
      };
      socket.emit('messag',data_server);
      $('#m').val('');
      return false;
    });
//===============================================================
    socket.on('conversation',function(msgs) {
      console.log("conversation event on client triggred with responce ",msgs);
      $.each(msgs, function(index, value){
        $('#messages').append($('<li class="hello">').text(value));
        console.log(value);
      })
    });
//======================================================================
    socket.on('u',function(activeusers) {
      activeUsers=activeusers;
      $.each(activeUsers, function(index, value){
        if(index===user_name) {
          return
        }
        $('#to').append($('<option>').text(index));
      });
      $.each(activeUsers, function(index, value){
        if(index===user_name) {
          return
        }
        $('#active').append($('<h2>').text(index));
      });
    });
    socket.on('listchanged',function(activeusers) {
      $("option").remove()
      $("h2").remove()
      socket.emit('u')
    });

//===========================================================================
    socket.on('message', function(msg){
      var name = msg.name;
      fromauser = name;
      $('h5').remove();
      $('#fromauser').append($('<h5>').text(fromauser));
      $('#messagesj').append($('<li class="hello" id=msg>').text(msg.msg));
    });
    console.log(activeUsers);
  });

</script>

<div class="col-xs-3">
  <h3>here is the list of active users users</h3>
  <div class="col-xs-4">
    <div class="activee" id="active"></div>
  </div>
</div>
<div class="col-xs-9">
  <h3>Conversation</h3>
  <div class="form-group">
    <label for="To">To</label>
    <select class="form-control" id="to">
      {% for user in users %}
      <option>{{user.name}}</option>
      {% endfor %}
    </select>
  </div>

  <div>
    <h4>with <b><div id="fromauser"></div></b></h4>
    <ul id="messages"></ul>
    <ul id="messagesj"></ul>
  </div>
  {{ form.open({ action:'ConversationController.store' }) }}
  {{ csrfField }}

  <input name="message" id="m" autocomplete="off" />
  <input name="to" type="hidden" value={{data_server.id}}/>
  <input name="from" type="hidden" value={{data_server.name}}/>
  <button type="submit" >send</button>

  {{ form.close() }}

</div>
{% endblock %}
